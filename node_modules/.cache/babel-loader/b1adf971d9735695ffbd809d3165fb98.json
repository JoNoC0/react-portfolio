{"ast":null,"code":"var _jsxFileName = \"/Users/jnujen/Desktop/Bootcamp/projects/react-portfolio/src/components/Contact/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { validateEmail } from '../../utils/helpers';\nimport { FaHeart } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ContactForm() {\n  _s();\n\n  // JSX\n  const [formState, setFormState] = useState({\n    name: '',\n    email: '',\n    message: ''\n  });\n  const {\n    name,\n    email,\n    message\n  } = formState;\n  const [errorMessage, setErrorMessage] = useState('');\n\n  function handleChange(e) {\n    console.log(formState);\n    setFormState({ ...formState,\n      [e.target.name]: e.target.value\n    }); // if (e.target.name === 'email') {\n    //     const isValid = validateEmail(e.target.value);\n    //     console.log(isValid);\n    //     // isValid conditional statement\n    //     if (!isValid) {\n    //         setErrorMessage('Your email is invalid.');\n    //     } else {\n    //         if (!e.target.value.length) {\n    //             setErrorMessage(`${e.target.name} is required.`);\n    //         } else {\n    //             setErrorMessage('');\n    //         }\n    //     }\n    // }\n    // if (!errorMessage) {\n    //     setFormState({...formState, name: e.target.value })\n    // }\n\n    console.log('errorMessage', errorMessage);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(formState);\n    alert('User ' + formState.name + ' has sent message!');\n    setFormState({\n      name: '',\n      email: '',\n      message: ''\n    });\n    console.log(formState);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(FaHeart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Contact me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"contact-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            defaultValue: name,\n            onBlur: handleChange,\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            defaultValue: email,\n            onBlur: handleChange,\n            name: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"message\",\n            children: \"Message:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"message\",\n            defaultValue: message,\n            onBlur: handleChange,\n            rows: \"5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-test\",\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(ContactForm, \"dHFNC0VuShqjNbsPBYAqPbUP0EM=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/jnujen/Desktop/Bootcamp/projects/react-portfolio/src/components/Contact/Contact.js"],"names":["React","useState","validateEmail","FaHeart","ContactForm","formState","setFormState","name","email","message","errorMessage","setErrorMessage","handleChange","e","console","log","target","value","handleSubmit","preventDefault","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,OAAT,QAAwB,gBAAxB;;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AAEnB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC;AAACM,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,KAAK,EAAE,EAAlB;AAAsBC,IAAAA,OAAO,EAAE;AAA/B,GAAD,CAA1C;AACA,QAAM;AAAEF,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BJ,SAAjC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;AAEA,WAASW,YAAT,CAAsBC,CAAtB,EAAyB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACAC,IAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAe,OAACQ,CAAC,CAACG,MAAF,CAAST,IAAV,GAAkBM,CAAC,CAACG,MAAF,CAASC;AAA1C,KAAD,CAAZ,CAFqB,CAGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAELH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,YAA5B;AACE;;AAED,WAASQ,YAAT,CAAsBL,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACM,cAAF;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACAe,IAAAA,KAAK,CAAC,UAAUf,SAAS,CAACE,IAApB,GAA2B,oBAA5B,CAAL;AACAD,IAAAA,YAAY,CAAC;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE,EAAlB;AAAsBC,MAAAA,OAAO,EAAE;AAA/B,KAAD,CAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACH;;AAED,sBACI;AAAA,2BAEA;AAAA,8BAEA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFA,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAM,QAAA,EAAE,EAAC,cAAT;AAAwB,QAAA,QAAQ,EAAEa,YAAlC;AAAA,gCACI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,YAAY,EAAEX,IAAjC;AAAuC,YAAA,MAAM,EAAEK,YAA/C;AAA6D,YAAA,IAAI,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,YAAY,EAAEJ,KAAlC;AAAyC,YAAA,MAAM,EAAEI,YAAjD;AAA+D,YAAA,IAAI,EAAC;AAApE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,eASI;AAAA,kCACI;AAAO,YAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAU,YAAA,IAAI,EAAC,SAAf;AAAyB,YAAA,YAAY,EAAEH,OAAvC;AAAgD,YAAA,MAAM,EAAEG,YAAxD;AAAsE,YAAA,IAAI,EAAC;AAA3E;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,EAaKF,YAAY,iBACT;AAAA,iCACI;AAAG,YAAA,SAAS,EAAC,YAAb;AAAA,sBAA2BA;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAdR,eAkBI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA,mBADJ;AAiCH;;GAxEQN,W;;KAAAA,W;AA0ET,eAAeA,WAAf","sourcesContent":["import React, { useState  } from 'react';\nimport { validateEmail } from '../../utils/helpers';\nimport { FaHeart } from 'react-icons/fa';\n\nfunction ContactForm() {\n\n    // JSX\n    const [formState, setFormState] = useState({name: '', email: '', message: ''});\n    const { name, email, message } = formState;\n    const [errorMessage, setErrorMessage] = useState('');\n\n    function handleChange(e) {\n        console.log(formState);\n        setFormState({...formState, [e.target.name] : e.target.value})\n        // if (e.target.name === 'email') {\n        //     const isValid = validateEmail(e.target.value);\n        //     console.log(isValid);\n        //     // isValid conditional statement\n        //     if (!isValid) {\n        //         setErrorMessage('Your email is invalid.');\n        //     } else {\n        //         if (!e.target.value.length) {\n        //             setErrorMessage(`${e.target.name} is required.`);\n        //         } else {\n        //             setErrorMessage('');\n        //         }\n        //     }\n        // }\n        // if (!errorMessage) {\n        //     setFormState({...formState, name: e.target.value })\n        // }\n        \n   console.log('errorMessage', errorMessage);\n    }\n    \n    function handleSubmit(e) {\n        e.preventDefault();\n        console.log(formState);\n        alert('User ' + formState.name + ' has sent message!') \n        setFormState({name: '', email: '', message: ''})\n        console.log(formState);\n    }\n\n    return (\n        <>\n    \n        <section>\n            \n        <FaHeart />\n            <h1>Contact me</h1>\n            <form id='contact-form' onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor='name'>Name:</label>\n                    <input type='text' defaultValue={name} onBlur={handleChange} name='name' />\n                </div>\n                <div>\n                    <label htmlFor='email'>Email address:</label>\n                    <input type='email' defaultValue={email} onBlur={handleChange} name='email' />\n                </div>\n                <div>\n                    <label htmlFor='message'>Message:</label>\n                    <textarea name='message' defaultValue={message} onBlur={handleChange} rows='5' />\n                </div>    \n                {errorMessage && (\n                    <div>\n                        <p className='error-test'>{errorMessage}</p>\n                    </div>\n                )}\n                <button type='submit'>Submit</button>\n            </form>\n           \n        </section>\n        </>\n    );\n    \n \n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}